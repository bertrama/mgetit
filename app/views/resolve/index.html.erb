<div class="container">
  <div class="row">
    <div class="col-md-8 col-xs-12">
      <div class="card">
        <%# need a div here for ajax bg loader to put bg loaded cover into %>
        <div id="cover_image" class="cover-image-container">
          <%= render_section(html_section_by_div_id("cover_image")) %>
        </div>
        <%= render 'background_updater', :user_request => @user_request %>
        <%= render 'manually_entered_warning', :user_request => @user_request %>
        <%= render 'citation', :user_request => @user_request %>
        <% html_sections(:resource_info).each do |section| %>
          <%= content_tag "div", :id => section[:div_id] do %>
            <%= render_section(section) %>
          <% end %>
        <% end %>

        <a class="button button-secondary show-more-sources" id="show_more_sources">Show More Sources</a>

        <div id="sources" class="hide">
          <ul class="tabs">
            <li class="tab tab-active">
              <a href="#digital_sources">Digital Sources</a>
            </li>
            <li class="tab">
              <a href="#physical_holdings_and_delivery_sources">Physical Holdings &amp; Delivery Sources</a>
            </li>
          </ul>

          <div id="digital_sources">
            <% html_sections(:digital_sources).each do |section| %>
              <%= content_tag "div", :id => section[:div_id] do %>
                <%= render_section(section) %>
              <% end %>
            <% end %>
          </div>

          <div id="physical_holdings_and_delivery_sources" class="hide">
            <% html_sections(:holding_sources).each do |section| %>
              <%= content_tag "div", :id => section[:div_id] do %>
                <%= render_section(section) %>
              <% end %>
            <% end %>
          </div>
        </div>

      </div>
    </div>
    <div class="col-md-4 col-xs-12">
      <div class="link-resolver-sidebar">
        <div class="card card-outline">
          <h2>Why am I here?</h2>
          <p>
            This page provides the quickest and easiest ways for you to read materials online. See delivery options for physical copies from U-M Libraries and partners.
          </p>
        </div>
        
        <div class="card">
          <h2>Ask a Librarian</h2>
          <p>
            Chat with a librarian on staff about this record or any help that you need.
          </p>

          <a href="http://www.lib.umich.edu/ask-librarian">Ask a Librarian</a>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  /*
    Managing Tabs
    =============

    Setup:
    * Create an unordered lists with classname "tabs" and
    children list items with the classname "tab". Inside
    the list items have an anchor tag linking to an
    ID on the page. That's it!

    Note: Also add class "tab-active" to the initial
    active tab.

  */

  (function() {

    // Get all tabs that will toggle the tab active content
    var tabs = document.getElementsByClassName('tab');
    var tab_ids = []

    // Get all tab IDS
    for (var i = 0; i < tabs.length; i++) {
      var tab = tabs[i]

      tab_ids.push(tab.firstElementChild.getAttribute('href').substring(1))
    }

    var handleTabClick = function(event) {
      var active_tab_id = event.target.getAttribute('href').substring(1)

      // Prevent the page from jumping to anchor
      event.preventDefault();

      // Reset active tabs by removing 'tab-active' class
      for (var i = 0; i < tabs.length; i++) {
        var tab = tabs[i]

        removeClass(tab, 'tab-active')
      }

      // Add active tab to target element
      addClass(event.target.parentElement, 'tab-active')

      // Show active content
      for (var i = 0; i < tab_ids.length; i++) {
        var tab_id = tab_ids[i]
        var content_element = document.getElementById(tab_id)

        if (tab_id == active_tab_id) {
          removeClass(content_element, 'hide')
        } else {
          addClass(content_element, 'hide')
        }
      }
    }

    // Add click handler to tabs
    for (var i = 0; i < tabs.length; i++) {
      tabs[i].addEventListener('click', handleTabClick, false)
    }

    /*
      Toggle Show Sources
    */
    var show_more_sources = document.getElementById('show_more_sources')
    var sources = document.getElementById('sources')

    show_more_sources.addEventListener('click', function() {
      addClass(show_more_sources, 'hide')
      removeClass(sources, 'hide')
    })

    /*
      Helper Functions
    */
    function addClass(el, className) {
      if (el.classList)
        el.classList.add(className)
      else if (!hasClass(el, className)) el.className += " " + className
    }

    function removeClass(el, className) {
      if (el.classList)
        el.classList.remove(className)
      else if (hasClass(el, className)) {
        var reg = new RegExp('(\\s|^)' + className + '(\\s|$)')
        el.className=el.className.replace(reg, ' ')
      }
    }
  })();


</script>
